name: Pull Request Checks

on:
  pull_request:
    branches: [ main, develop ]
    types: [ opened, synchronize, reopened ]

  push:
    branches: [ main, develop ]

  permissions:
    pull-requests: write
    issues: write

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'
      
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - name: Run Checkstyle
        run: ./gradlew checkstyleMain
      
      - name: Run PMD
        run: ./gradlew pmdMain
      
      - name: Run SpotBugs
        run: ./gradlew spotbugsMain
      
      - name: Run Spotless check
        run: ./gradlew spotlessCheck
      
      - name: Run tests
        run: ./gradlew test
      
      - name: Generate JaCoCo report
        run: ./gradlew jacocoTestReport
      
      - name: Upload JaCoCo coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./build/reports/jacoco/test/jacocoTestReport.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            build/test-results/
            build/reports/tests/
            build/reports/jacoco/
            build/reports/pmd/
            build/reports/spotbugs/
            build/reports/checkstyle/
          retention-days: 30
      
      - name: Comment PR with results
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            
            // Verifica se h√° falhas nos testes
            const testResults = fs.existsSync('./build/test-results/test') ? 
              fs.readdirSync('./build/test-results/test').filter(f => f.endsWith('.xml')).length : 0;
            
            // Verifica se h√° problemas de qualidade
            const hasQualityIssues = fs.existsSync('./build/reports/pmd') || 
                                   fs.existsSync('./build/reports/spotbugs') ||
                                   fs.existsSync('./build/reports/checkstyle');
            
            let comment = '## üîç Code Quality Check Results\n\n';
            
            if (testResults > 0) {
              comment += '‚úÖ **Tests**: Executados com sucesso\n';
            }
            
            if (hasQualityIssues) {
              comment += '‚ö†Ô∏è **Code Quality**: Verifique os relat√≥rios para detalhes\n';
            } else {
              comment += '‚úÖ **Code Quality**: Todos os checks passaram\n';
            }
            
            comment += '\nüìä **Coverage**: Relat√≥rio JaCoCo gerado\n';
            comment += '\nüìÅ **Artifacts**: Relat√≥rios dispon√≠veis para download';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  security:
    name: Security Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      
      - name: Run dependency vulnerability check
        run: ./gradlew dependencyCheckAnalyze
        continue-on-error: true
      
      - name: Upload security report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-report
          path: build/reports/dependency-check-report.html
          retention-days: 30

  build:
    name: Build Verification
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'
      
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      
      - name: Build project
        run: ./gradlew build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: build/libs/
          retention-days: 30
